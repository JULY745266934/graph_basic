{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/common/Edge.ts","src/common/MathUtil.ts","src/common/MyCanvas.ts","src/common/MyGraph.ts","src/common/Rgba.ts","src/gradient/GEdge.ts","src/gradient/GMyGraph.ts","src/index.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Edge","y","this","_x1","x2","_y1","_y2","_x2","x1","y1","y2","_classCallCheck","Rgba_1","MathUtil","color1","color2","amount","g","b","Rgba","default","MyCanvas","buffer","imgData","_imgData","j","data","_ctx","putImageData","_canvas","width","height","document","getElementById","getContext","createImageData","Edge_1","MyGraph","x","color","_width","_height","Math","round","_buffer","setPixel","BLACK","size","xOffset","yOffset","drawPoint","yMax","yMin","xMax","xMin","k","x3","y3","edge1","edge2","edge3","yDis","drawEdge","getX","drawLine","clearBuffer","_r","_g","_b","_a","arguments","undefined","GEdge","_color1","_color2","MathUtil_1","GEdge_1","GMyGraph","scale","colorLerp","color3","step","midColorScale","isTop","e2Color","drawHLine","MyCanvas_1","MyGraph_1","GMyGraph_1","Demo","myCanvas","gMyGraph","drawTriangle","fillBuffer"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,ySCAaK,mCA2CGC,GACR,OAASC,KAAKC,IAAMD,KAAKE,KAAOF,KAAKG,IAAMH,KAAKI,MAASL,EAAIC,KAAKG,KAAOH,KAAKC,+BApC9E,OAAOD,KAAKC,+BAIZ,OAAOD,KAAKG,+BAIZ,OAAOH,KAAKK,+BAIZ,OAAOL,KAAKI,iCA4BZ,OAAOJ,KAAKI,IAAMJ,KAAKG,WAzB3B,SAAAL,EAAYQ,EAAYC,EAAYL,EAAYM,gGAAUC,CAAAT,KAAAF,GAtBlDE,KAAAC,IAAc,EACdD,KAAAG,IAAc,EAEdH,KAAAK,IAAc,EACdL,KAAAI,IAAc,EAoBTI,EAALD,GACAP,KAAKC,IAAMC,EACXF,KAAKG,IAAMK,EAEXR,KAAKK,IAAMC,EACXN,KAAKI,IAAMG,IAEXP,KAAKC,IAAMK,EACXN,KAAKG,IAAMI,EAEXP,KAAKK,IAAMH,EACXF,KAAKI,IAAMI,GApCvBf,EAAAK,KAAAA,4TCAA,IAAAY,EAAAvB,EAAA,UAEqBwB,6CAEOC,EAAcC,EAAcC,GAChD,IAAInC,EAAIiC,EAAOjC,GAAK,EAAImC,GAAUD,EAAOlC,EAAImC,EACzCC,EAAIH,EAAOG,GAAK,EAAID,GAAUD,EAAOE,EAAID,EACzCE,EAAIJ,EAAOI,GAAK,EAAIF,GAAUD,EAAOG,EAAIF,EACzCzB,EAAIuB,EAAOvB,GAAK,EAAIyB,GAAUD,EAAOxB,EAAIyB,EAC7C,OAAO,IAAIJ,EAAAO,KAAKtC,EAAGoC,EAAGC,EAAG3B,6HAPjCI,EAAAyB,QAAAP,0UCAqBQ,yCAqBCC,GAEd,IADA,IAAIC,EAAUrB,KAAKsB,SACVtC,EAAI,EAAGuC,EAAI,EAAGvC,EAAIqC,EAAQG,KAAK7B,QAAU4B,EAAIH,EAAOzB,OAAQX,GAAK,EAAGuC,IACzEF,EAAQG,KAAKxC,EAAI,GAAKoC,EAAOG,GAAG5C,EAChC0C,EAAQG,KAAKxC,EAAI,GAAKoC,EAAOG,GAAGR,EAChCM,EAAQG,KAAKxC,EAAI,GAAKoC,EAAOG,GAAGP,EAChCK,EAAQG,KAAKxC,EAAI,GAAKoC,EAAOG,GAAGlC,EAEpCW,KAAKyB,KAAKC,aAAaL,EAAS,EAAG,iCAfnC,OAAOrB,KAAK2B,QAAQC,qCAIpB,OAAO5B,KAAK2B,QAAQE,cAZxB,SAAAV,iGAAAV,CAAAT,KAAAmB,GAJQnB,KAAA2B,QAAe,KACf3B,KAAAyB,KAAY,KACZzB,KAAAsB,SAAgB,KAGpBtB,KAAK2B,QAAUG,SAASC,eAAe,YACvC/B,KAAKyB,KAAOzB,KAAK2B,QAAQK,WAAW,MAEpChC,KAAKsB,SAAWtB,KAAKyB,KAAKQ,gBAAgBjC,KAAK4B,MAAO5B,KAAK6B,QAVnEpC,EAAAyB,QAAAC,4TCFA,IAAAT,EAAAvB,EAAA,UACA+C,EAAA/C,EAAA,UAEqBgD,uCAiBDC,EAAWrC,EAAWsC,GAC9BD,GAAKpC,KAAKsC,QAAUvC,GAAKC,KAAKuC,UAGlCH,EAAII,KAAKC,MAAML,GACfrC,EAAIyC,KAAKC,MAAM1C,GACfC,KAAK0C,QAAQ3C,EAAIC,KAAKsC,OAASF,GAAKC,yCAIpC,IAAK,IAAIrD,EAAI,EAAGA,EAAIgB,KAAKsC,OAAQtD,IAC7B,IAAK,IAAIuC,EAAI,EAAGA,EAAIvB,KAAKuC,QAAShB,IAC9BvB,KAAK2C,SAAS3D,EAAGuC,EAAGb,EAAAO,KAAK2B,yCAYpBR,EAAWrC,EAAWsC,EAAaQ,GAEhD,IAAK,IAAI7D,EAAI,EAAGA,EAAI6D,EAAM7D,IACtB,IAAK,IAAIuC,EAAI,EAAGA,EAAIsB,EAAMtB,IACtBvB,KAAK2C,SAASP,EAAIpD,EAAGe,EAAIwB,EAAGc,oCAexB/B,EAAYC,EAAYL,EAAYM,EAAY6B,EAAaQ,GAEzE,IAAIC,EAAUxC,EAAKJ,EACf6C,EAAUxC,EAAKC,EAEnB,GAAe,GAAXsC,GAA2B,GAAXC,EAEhB/C,KAAKgD,UAAU1C,EAAIC,EAAI8B,EAAOQ,QAC3B,GAAe,GAAXC,EAAc,CAErB,IAAIG,EAAOzC,EACP0C,EAAO3C,EACFC,EAALD,IACA0C,EAAO1C,EACP2C,EAAO1C,GAGX,IAAK,IAAIT,EAAImD,EAAMnD,EAAIkD,EAAMlD,GAAK8C,EAC9B7C,KAAKgD,UAAU1C,EAAIP,EAAGsC,EAAOQ,QAG9B,GAAe,GAAXE,EAAc,CAErB,IAAII,EAAOjD,EACPkD,EAAO9C,EAEFJ,EAALI,IACA6C,EAAO7C,EACP8C,EAAOlD,GAEX,IAAK,IAAIkC,EAAIgB,EAAMhB,EAAIe,EAAMf,GAAKS,EAC9B7C,KAAKgD,UAAUZ,EAAG7B,EAAI8B,EAAOQ,OAE9B,CAEH,IAAIQ,GAAK7C,EAAKD,IAAOL,EAAKI,GAE1B,GAASJ,EAALI,EACA,IAAS8B,EAAIlC,EAAIkC,EAAI9B,EAAI8B,GAAKS,EACtB9C,EAAIsD,GAAKjB,EAAIlC,GAAMM,EACvBR,KAAKgD,UAAUZ,EAAGrC,EAAGsC,EAAOQ,QAGhC,IAAST,EAAI9B,EAAI8B,EAAIlC,EAAIkC,GAAKS,EACtB9C,EAAIsD,GAAKjB,EAAI9B,GAAMC,EACvBP,KAAKgD,UAAUZ,EAAGrC,EAAGsC,EAAOQ,yCAUxCvC,EAAYC,EACZL,EAAYM,EACZ8C,EAAYC,EACZlB,GAGA,IAAImB,EAAc,IAAItB,EAAApC,KAAKQ,EAAIC,EAAIL,EAAIM,GACnCiD,EAAc,IAAIvB,EAAApC,KAAKI,EAAIM,EAAI8C,EAAIC,GACnCG,EAAc,IAAIxB,EAAApC,KAAKwD,EAAIC,EAAIjD,EAAIC,GAEnCiD,EAAMG,KAAOF,EAAME,MAAQH,EAAMG,KAAOD,EAAMC,MAC9C3D,KAAK4D,SAASH,EAAOD,EAAOnB,GAC5BrC,KAAK4D,SAASF,EAAOF,EAAOnB,IACrBoB,EAAME,KAAOH,EAAMG,MAAQF,EAAME,KAAOD,EAAMC,MACrD3D,KAAK4D,SAASJ,EAAOC,EAAOpB,GAC5BrC,KAAK4D,SAASF,EAAOD,EAAOpB,KAE5BrC,KAAK4D,SAASJ,EAAOE,EAAOrB,GAC5BrC,KAAK4D,SAASH,EAAOC,EAAOrB,qCAWpBmB,EAAaC,EAAapB,GAEtC,IAAK,IAAItC,EAAIyD,EAAMjD,GAAIR,EAAIyD,EAAMhD,GAAIT,GAAK,EAAG,CACzC,IAAIO,EAAKkD,EAAMK,KAAK9D,GAChBG,EAAKuD,EAAMI,KAAK9D,GACpBC,KAAK8D,SAASxD,EAAIP,EAAGG,EAAIH,EAAGsC,EAAO,mCAvIvC,OAAOrC,KAAK0C,eAThB,SAAAP,EAAYP,EAAeC,gGAAcpB,CAAAT,KAAAmC,GAHjCnC,KAAAsC,OAAiB,EACjBtC,KAAAuC,QAAkB,EAGtBvC,KAAKsC,OAASV,EACd5B,KAAKuC,QAAUV,EAEf7B,KAAK0C,QAAU,GACf1C,KAAK+D,cAVbtE,EAAAyB,QAAAiB,qVCDalB,gCASL,OAAOjB,KAAKgE,6BAIZ,OAAOhE,KAAKiE,6BAIZ,OAAOjE,KAAKkE,6BAIZ,OAAOlE,KAAKmE,UAGhB,SAAAlD,IAA8E,IAAlEtC,EAAkE,EAAAyF,UAAAzE,aAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAtD,IAAKrD,EAAiD,EAAAqD,UAAAzE,aAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAArC,IAAKpD,EAAgC,EAAAoD,UAAAzE,aAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAApB,IAAK/E,EAAe,EAAA+E,UAAAzE,aAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAH,iGAAG3D,CAAAT,KAAAiB,GAC1EjB,KAAKgE,GAAKrF,EACVqB,KAAKiE,GAAKlD,EACVf,KAAKkE,GAAKlD,EACVhB,KAAKmE,GAAK9E,EAtBA4B,EAAA2B,MAAc,IAAI3B,EAAK,EAAG,EAAG,EAAG,GANlDxB,EAAAwB,KAAAA,gUCCaqD,mCA2DGvE,GACR,OAASC,KAAAC,IAAWD,KAAZE,KAAwBF,KAAAG,IAAWH,KAApCI,MAAkDL,EAAIC,KAAtDG,KAAkEH,KAAzEC,+BAjDA,OAAOD,KAAPC,+BAIA,OAAOD,KAAPG,+BAIA,OAAOH,KAAPK,+BAIA,OAAOL,KAAPI,mCAIA,OAAOJ,KAAPuE,uCAIA,OAAOvE,KAAPwE,qCAiCA,OAAOxE,KAAAI,IAAWJ,KAAlBG,WA9BJ,SAAAmE,EAAAhE,EAAAC,EAAAL,EAAAM,EAAAI,EAAAC,gGAAsFJ,CAAAT,KAAAsE,GAjC9EtE,KAAAC,IAAA,EACAD,KAAAG,IAAA,EAEAH,KAAAK,IAAA,EACAL,KAAAI,IAAA,EA+BAG,GAAJC,GACIR,KAAAC,IAAAK,EACAN,KAAAG,IAAAI,EACAP,KAAAuE,QAAA3D,EAEAZ,KAAAK,IAAAH,EACAF,KAAAI,IAAAI,EACAR,KAAAwE,QAAA3D,IAGAb,KAAAC,IAAAC,EACAF,KAAAG,IAAAK,EACAR,KAAAuE,QAAA1D,EAEAb,KAAAK,IAAAC,EACAN,KAAAI,IAAAG,EACAP,KAAAwE,QAAA5D,GApDZnB,EAAA6E,MAAAA,4TCHA,IAAA5D,EAAAvB,EAAA,kBACAsF,EAAAtF,EAAA,sBACAuF,EAAAvF,EAAA,WAEqBwF,uCAiBDvC,EAAWrC,EAAWsC,GAC9BD,GAAKpC,KAALsC,QAAoBvC,GAAKC,KAA7BuC,UAGAH,EAAII,KAAAC,MAAJL,GACArC,EAAIyC,KAAAC,MAAJ1C,GACAC,KAAA0C,QAAa3C,EAAIC,KAAJsC,OAAbF,GAAAC,yCAIA,IAAK,IAAIrD,EAAT,EAAgBA,EAAIgB,KAApBsC,OAAAtD,IACI,IAAK,IAAIuC,EAAT,EAAgBA,EAAIvB,KAApBuC,QAAAhB,IACIvB,KAAA2C,SAAA3D,EAAAuC,EAAoBb,EAAAO,KAApB2B,yCAYKR,EAAWrC,EAAWsC,EAAaQ,GAEhD,IAAK,IAAI7D,EAAT,EAAgBA,EAAhB6D,EAAA7D,IACI,IAAK,IAAIuC,EAAT,EAAgBA,EAAhBsB,EAAAtB,IACIvB,KAAA2C,SAAcP,EAAdpD,EAAqBe,EAArBwB,EAAAc,qCAeK/B,EAAYJ,EAAYH,EAAWa,EAAcC,GAG9D,IAAIZ,EAAJK,EACID,EAAJH,EACIqE,EAAJ3D,EACI4D,EAAJ3D,EAEAX,EAAII,IACAL,EAAAC,EACAG,EAAAC,EACAiE,EAAA1D,EACA2D,EAAA5D,GAEJ,IAAK,IAAIwB,EAATnC,EAAkBmC,EAAlB/B,EAA2B+B,GAA3B,EAAmC,CAC/B,IAAIwC,GAASxC,EAADnC,IAAaI,EAAzBJ,GACIoC,EAAQoC,EAAAvD,QAAA2D,UAAAN,EAAAC,EAAZI,GACA5E,KAAAgD,UAAAZ,EAAArC,EAAAsC,EAAA,yCAQJ/B,EAAYC,EACZL,EAAYM,EACZ8C,EAAYC,EACZ3C,EACAC,EACAiE,GAGA,IAAItB,EAAe,IAAIkB,EAAJJ,MAAAhE,EAAAC,EAAAL,EAAAM,EAAAI,EAAnBC,GACI4C,EAAe,IAAIiB,EAAJJ,MAAApE,EAAAM,EAAA8C,EAAAC,EAAA1C,EAAnBiE,GACIpB,EAAe,IAAIgB,EAAJJ,MAAAhB,EAAAC,EAAAjD,EAAAC,EAAAuE,EAAnBlE,GAEI4C,EAAAG,KAAaF,EAAbE,MAA2BH,EAAAG,KAAaD,EAA5CC,MAII3D,KAAA4D,SAAAH,EAAAD,GAEAxD,KAAA4D,SAAAF,EAAAF,IAEOC,EAAAE,KAAaH,EAAbG,MAA2BF,EAAAE,KAAaD,EAA5CC,MAIH3D,KAAA4D,SAAAJ,EAAAC,GAEAzD,KAAA4D,SAAAF,EAAAD,KAKAzD,KAAA4D,SAAAJ,EAAAE,GAEA1D,KAAA4D,SAAAH,EAAAC,qCAYQF,EAAcC,GAC1B,IAAIsB,EAAO,GAAKvB,EAAAhD,GAAWgD,EAA3BjD,IAEIqE,EAAJ,EAEII,GAAyBxB,EAAAhD,GAAWgD,EAAZjD,KAAyBkD,EAAAjD,GAAWiD,EAAhElD,IAGI0E,EAAiBzB,EAAAhD,GAAWiD,EAAhCjD,GACI0E,EAAgBxE,EAAAO,KAApB2B,MAEIsC,EADJD,EACcR,EAAAvD,QAAA2D,UAAmBpB,EAAnB7C,OAAiC6C,EAAjC5C,OAAVmE,GAEUP,EAAAvD,QAAA2D,UAAmBpB,EAAnB5C,OAAiC4C,EAAjC7C,OAAVoE,GAGJ,IAAK,IAAIjF,EAAIyD,EAAbjD,GAAuBR,EAAIyD,EAA3BhD,GAAqCT,GAArC,EAA6C,CAEzC6E,GAAAG,EAEA,IAGAnE,EAAAC,EAHIP,EAAKkD,EAAAK,KAAT9D,GACIG,EAAKuD,EAAAI,KAAT9D,GAGAa,EAAS6D,EAAAvD,QAAA2D,UAAmBrB,EAAnB5C,OAAiC4C,EAAjC3C,OAAT+D,GAGI/D,EADJoE,EACaR,EAAAvD,QAAA2D,UAAmBpB,EAAnB7C,OAAAsE,EAATN,GAESH,EAAAvD,QAAA2D,UAAAK,EAA4BzB,EAA5B5C,OAAT+D,GAEJ5E,KAAAmF,UAAA7E,EAAAJ,EAAAH,EAAAa,EAAAC,mCAnJJ,OAAOb,KAAP0C,eATJ,SAAAiC,EAAA/C,EAAAC,gGAAyCpB,CAAAT,KAAA2E,GAHjC3E,KAAAsC,OAAA,EACAtC,KAAAuC,QAAA,EAGJvC,KAAAsC,OAAAV,EACA5B,KAAAuC,QAAAV,EAEA7B,KAAA0C,QAAA,GACA1C,KAAA+D,cAVRtE,EAAAyB,QAAAyD,6ICJA,IAAAS,EAAAjG,EAAA,qBACAkG,EAAAlG,EAAA,oBACAuB,EAAAvB,EAAA,iBACAmG,EAAAnG,EAAA,uBA+CA,IA3CI,SAAAoG,iGAAA9E,CAAAT,KAAAuF,GACI,IAAIC,EAAW,IAAIJ,EAAnBlE,QAgBIuE,GAdmB,IAAIJ,EAAJnE,QAAYsE,EAAZ5D,MAA4B4D,EAAnD3D,QAcyB,IAAIyD,EAAJpE,QAAasE,EAAb5D,MAA6B4D,EAAtD3D,SAaA4D,EAAAC,aAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAII,IAAIhF,EAAJO,KAAA,IAAA,EAAA,EAJJ,KAKI,IAAIP,EAAJO,KAAA,EAAA,IAAA,EALJ,KAMI,IAAIP,EAAJO,KAAA,EAAA,EAAA,IANJ,MASAuE,EAAAG,WAAoBF,EAApBrE","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export class Edge {\r\n    private _x1: number = 0;\r\n    private _y1: number = 0;\r\n\r\n    private _x2: number = 0;\r\n    private _y2: number = 0;\r\n\r\n    public get x1(): number {\r\n        return this._x1;\r\n    }\r\n\r\n    public get y1(): number {\r\n        return this._y1;\r\n    }\r\n\r\n    public get x2(): number {\r\n        return this._x2;\r\n    }\r\n\r\n    public get y2(): number {\r\n        return this._y2;\r\n    }\r\n\r\n    constructor(x1: number, y1: number, x2: number, y2: number) {\r\n\r\n        if (y1 > y2) {\r\n            this._x1 = x2;\r\n            this._y1 = y2;\r\n\r\n            this._x2 = x1;\r\n            this._y2 = y1;\r\n        } else {\r\n            this._x1 = x1;\r\n            this._y1 = y1;\r\n\r\n            this._x2 = x2;\r\n            this._y2 = y2;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据Y轴获取边上的x值\r\n     */\r\n    public getX(y: number) {\r\n        return ((this._x1 - this.x2) / (this._y1 - this._y2)) * (y - this._y1) + this._x1;\r\n    }\r\n\r\n    public get yDis() {\r\n        return this._y2 - this._y1;\r\n    }\r\n}","import { Rgba } from \"./Rgba\";\r\n\r\nexport default class MathUtil {\r\n\r\n    public static colorLerp(color1: Rgba, color2: Rgba, amount: number) {\r\n        let r = color1.r * (1 - amount) + color2.r * amount;\r\n        let g = color1.g * (1 - amount) + color2.g * amount;\r\n        let b = color1.b * (1 - amount) + color2.b * amount;\r\n        let a = color1.a * (1 - amount) + color2.a * amount;\r\n        return new Rgba(r, g, b, a);\r\n    }\r\n}","import { Rgba } from \"./Rgba\";\r\n\r\nexport default class MyCanvas {\r\n\r\n    private _canvas: any = null;\r\n    private _ctx: any = null;\r\n    private _imgData: any = null;\r\n\r\n    constructor() {\r\n        this._canvas = document.getElementById(\"myCanvas\");\r\n        this._ctx = this._canvas.getContext(\"2d\");\r\n\r\n        this._imgData = this._ctx.createImageData(this.width, this.height);\r\n    }\r\n\r\n    public get width(): number {\r\n        return this._canvas.width;\r\n    }\r\n\r\n    public get height(): number {\r\n        return this._canvas.height;\r\n    }\r\n\r\n    public fillBuffer(buffer: Rgba[]) {\r\n        let imgData = this._imgData;\r\n        for (var i = 0, j = 0; i < imgData.data.length && j < buffer.length; i += 4, j++) {\r\n            imgData.data[i + 0] = buffer[j].r;\r\n            imgData.data[i + 1] = buffer[j].g;\r\n            imgData.data[i + 2] = buffer[j].b;\r\n            imgData.data[i + 3] = buffer[j].a;\r\n        }\r\n        this._ctx.putImageData(imgData, 0, 0);\r\n    }\r\n}","import { Rgba } from \"./Rgba\";\r\nimport { Edge } from \"./Edge\";\r\n\r\nexport default class MyGraph {\r\n    private _buffer: Array<Rgba>;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n\r\n    constructor(width: number, height: number) {\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        this._buffer = [];\r\n        this.clearBuffer();\r\n    }\r\n\r\n    public get buffer(): Rgba[] {\r\n        return this._buffer;\r\n    }\r\n\r\n    public setPixel(x: number, y: number, color: Rgba) {\r\n        if (x >= this._width || y >= this._height) {\r\n            return;\r\n        }\r\n        x = Math.round(x);\r\n        y = Math.round(y);\r\n        this._buffer[y * this._width + x] = color;\r\n    }\r\n\r\n    public clearBuffer() {\r\n        for (var i = 0; i < this._width; i++) {\r\n            for (var j = 0; j < this._height; j++) {\r\n                this.setPixel(i, j, Rgba.BLACK);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 画点\r\n     * @param x \r\n     * @param y \r\n     * @param color \r\n     * @param size \r\n     */\r\n    public drawPoint(x: number, y: number, color: Rgba, size: number) {\r\n\r\n        for (var i = 0; i < size; i++) {\r\n            for (var j = 0; j < size; j++) {\r\n                this.setPixel(x + i, y + j, color);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     *  画线\r\n     * @param x1 \r\n     * @param y1 \r\n     * @param x2 \r\n     * @param y2 \r\n     * @param color \r\n     * @param size \r\n     */\r\n    public drawLine(x1: number, y1: number, x2: number, y2: number, color: Rgba, size: number) {\r\n\r\n        let xOffset = x1 - x2;\r\n        let yOffset = y1 - y2;\r\n\r\n        if (xOffset == 0 && yOffset == 0) {\r\n            //点重合\r\n            this.drawPoint(x1, y1, color, size);\r\n        } else if (xOffset == 0) {\r\n            //画竖线\r\n            let yMax = y2;\r\n            let yMin = y1;\r\n            if (y1 > y2) {\r\n                yMax = y1;\r\n                yMin = y2;\r\n            }\r\n\r\n            for (var y = yMin; y < yMax; y += size) {\r\n                this.drawPoint(x1, y, color, size);\r\n            }\r\n\r\n        } else if (yOffset == 0) {\r\n            //画横线\r\n            let xMax = x2;\r\n            let xMin = x1;\r\n\r\n            if (x1 > x2) {\r\n                xMax = x1;\r\n                xMin = x2;\r\n            }\r\n            for (var x = xMin; x < xMax; x += size) {\r\n                this.drawPoint(x, y1, color, size);\r\n            }\r\n        } else {\r\n            //画斜线\r\n            let k = (y2 - y1) / (x2 - x1);\r\n\r\n            if (x1 > x2) {\r\n                for (var x = x2; x < x1; x += size) {\r\n                    var y = k * (x - x2) + y2;\r\n                    this.drawPoint(x, y, color, size);\r\n                }\r\n            } else {\r\n                for (var x = x1; x < x2; x += size) {\r\n                    var y = k * (x - x1) + y1;\r\n                    this.drawPoint(x, y, color, size);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /***\r\n     * 画三角形\r\n     */\r\n    public drawTriangle(\r\n        x1: number, y1: number,\r\n        x2: number, y2: number,\r\n        x3: number, y3: number,\r\n        color: Rgba\r\n    ) {\r\n\r\n        let edge1: Edge = new Edge(x1, y1, x2, y2);\r\n        let edge2: Edge = new Edge(x2, y2, x3, y3);\r\n        let edge3: Edge = new Edge(x3, y3, x1, y1);\r\n\r\n        if (edge1.yDis > edge2.yDis && edge1.yDis > edge3.yDis) {\r\n            this.drawEdge(edge2, edge1, color);\r\n            this.drawEdge(edge3, edge1, color);\r\n        } else if (edge2.yDis > edge1.yDis && edge2.yDis > edge3.yDis) {\r\n            this.drawEdge(edge1, edge2, color);\r\n            this.drawEdge(edge3, edge2, color);\r\n        } else {\r\n            this.drawEdge(edge1, edge3, color);\r\n            this.drawEdge(edge2, edge3, color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param edge1 短的边\r\n     * @param edge2 长的边\r\n     * @param color \r\n     * @param size \r\n     */\r\n    public drawEdge(edge1: Edge, edge2: Edge, color: Rgba) {\r\n\r\n        for (let y = edge1.y1; y < edge1.y2; y += 1) {\r\n            let x1 = edge1.getX(y);\r\n            let x2 = edge2.getX(y);\r\n            this.drawLine(x1, y, x2, y, color, 1);\r\n        }\r\n    }\r\n}","\r\n\r\nexport class Rgba {\r\n    private _r: number;\r\n    private _g: number;\r\n    private _b: number;\r\n    private _a: number;\r\n\r\n    public static BLACK: Rgba = new Rgba(0, 0, 0, 0);\r\n\r\n    public get r(): number {\r\n        return this._r;\r\n    }\r\n\r\n    public get g(): number {\r\n        return this._g;\r\n    }\r\n\r\n    public get b(): number {\r\n        return this._b;\r\n    }\r\n\r\n    public get a(): number {\r\n        return this._a;\r\n    }\r\n\r\n    constructor(r: number = 255, g: number = 255, b: number = 255, a: number = 255) {\r\n        this._r = r;\r\n        this._g = g;\r\n        this._b = b;\r\n        this._a = a;\r\n    }\r\n}","import { Rgba } from \"../common/Rgba\";\r\n\r\n\r\nexport class GEdge {\r\n    private _x1: number = 0;\r\n    private _y1: number = 0;\r\n\r\n    private _x2: number = 0;\r\n    private _y2: number = 0;\r\n\r\n    private _color1: Rgba;\r\n    private _color2: Rgba\r\n\r\n    public get x1(): number {\r\n        return this._x1;\r\n    }\r\n\r\n    public get y1(): number {\r\n        return this._y1;\r\n    }\r\n\r\n    public get x2(): number {\r\n        return this._x2;\r\n    }\r\n\r\n    public get y2(): number {\r\n        return this._y2;\r\n    }\r\n\r\n    public get color1(): Rgba {\r\n        return this._color1;\r\n    }\r\n\r\n    public get color2(): Rgba {\r\n        return this._color2;\r\n    }\r\n\r\n    constructor(x1: number, y1: number, x2: number, y2: number, color1: Rgba, color2: Rgba) {\r\n\r\n        if (y1 <= y2) {\r\n            this._x1 = x1;\r\n            this._y1 = y1;\r\n            this._color1 = color1;\r\n\r\n            this._x2 = x2;\r\n            this._y2 = y2;\r\n            this._color2 = color2;\r\n\r\n        } else {\r\n            this._x1 = x2;\r\n            this._y1 = y2;\r\n            this._color1 = color2;\r\n\r\n            this._x2 = x1;\r\n            this._y2 = y1;\r\n            this._color2 = color1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据Y轴获取边上的x值\r\n     */\r\n    public getX(y: number) {\r\n        return ((this._x1 - this.x2) / (this._y1 - this._y2)) * (y - this._y1) + this._x1;\r\n    }\r\n\r\n    public get yDis() {\r\n        return this._y2 - this._y1;\r\n    }\r\n}","import { Rgba } from \"../common/Rgba\";\r\nimport MathUtil from \"../common/MathUtil\";\r\nimport { GEdge } from \"./GEdge\";\r\n\r\nexport default class GMyGraph {\r\n    private _buffer: Array<Rgba>;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n\r\n    constructor(width: number, height: number) {\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        this._buffer = [];\r\n        this.clearBuffer();\r\n    }\r\n\r\n    public get buffer(): Rgba[] {\r\n        return this._buffer;\r\n    }\r\n\r\n    public setPixel(x: number, y: number, color: Rgba) {\r\n        if (x >= this._width || y >= this._height) {\r\n            return;\r\n        }\r\n        x = Math.round(x);\r\n        y = Math.round(y);\r\n        this._buffer[y * this._width + x] = color;\r\n    }\r\n\r\n    public clearBuffer() {\r\n        for (var i = 0; i < this._width; i++) {\r\n            for (var j = 0; j < this._height; j++) {\r\n                this.setPixel(i, j, Rgba.BLACK);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 画点\r\n     * @param x \r\n     * @param y \r\n     * @param color \r\n     * @param size \r\n     */\r\n    public drawPoint(x: number, y: number, color: Rgba, size: number) {\r\n\r\n        for (var i = 0; i < size; i++) {\r\n            for (var j = 0; j < size; j++) {\r\n                this.setPixel(x + i, y + j, color);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     *  画线\r\n     * @param x1 \r\n     * @param y1 \r\n     * @param x2 \r\n     * @param y2 \r\n     * @param color \r\n     * @param size \r\n     */\r\n    public drawHLine(x1: number, x2: number, y: number, color1: Rgba, color2: Rgba) {\r\n\r\n        //画横线\r\n        let _x1 = x1;\r\n        let _x2 = x2;\r\n        let _color1 = color1;\r\n        let _color2 = color2;\r\n\r\n        if (x1 > x2) {\r\n            _x1 = x2;\r\n            _x2 = x1;\r\n            _color1 = color2;\r\n            _color2 = color1;\r\n        }\r\n        for (var x = _x1; x < _x2; x += 1) {\r\n            let scale = (x - _x1) / (_x2 - _x1);\r\n            let color = MathUtil.colorLerp(_color1, _color2, scale);\r\n            this.drawPoint(x, y, color, 1);\r\n        }\r\n    }\r\n\r\n    /***\r\n     * 画三角形\r\n     */\r\n    public drawTriangle(\r\n        x1: number, y1: number,\r\n        x2: number, y2: number,\r\n        x3: number, y3: number,\r\n        color1: Rgba,\r\n        color2: Rgba,\r\n        color3: Rgba\r\n    ) {\r\n\r\n        let edge1: GEdge = new GEdge(x1, y1, x2, y2, color1, color2);\r\n        let edge2: GEdge = new GEdge(x2, y2, x3, y3, color2, color3);\r\n        let edge3: GEdge = new GEdge(x3, y3, x1, y1, color3, color1);\r\n\r\n        if (edge1.yDis > edge2.yDis && edge1.yDis > edge3.yDis) {\r\n            //第一条边是长边\r\n\r\n            // 画上半部分三角形\r\n            this.drawEdge(edge2, edge1);\r\n            // 画下半部分三角形\r\n            this.drawEdge(edge3, edge1);\r\n\r\n        } else if (edge2.yDis > edge1.yDis && edge2.yDis > edge3.yDis) {\r\n            //第二条边是长边\r\n\r\n            // 画上半部分三角形\r\n            this.drawEdge(edge1, edge2);\r\n            // 画下半部分三角形\r\n            this.drawEdge(edge3, edge2);\r\n        } else {\r\n            //第三条边是长边\r\n\r\n            // 画上半部分三角形\r\n            this.drawEdge(edge1, edge3);\r\n            // 画下半部分三角形\r\n            this.drawEdge(edge2, edge3);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param edge1 短的边\r\n     * @param edge2 长的边\r\n     * @param color \r\n     * @param size \r\n     */\r\n\r\n    public drawEdge(edge1: GEdge, edge2: GEdge) {\r\n        let step = 1 / (edge1.y2 - edge1.y1);\r\n\r\n        let scale: number = 0;\r\n\r\n        let midColorScale: number = (edge1.y2 - edge1.y1) / (edge2.y2 - edge2.y1);\r\n\r\n        //上半边的三角形\r\n        let isTop: boolean = edge1.y2 < edge2.y2;\r\n        let e2Color: Rgba = Rgba.BLACK;\r\n        if (isTop) {\r\n            e2Color = MathUtil.colorLerp(edge2.color1, edge2.color2, midColorScale);\r\n        } else {\r\n            e2Color = MathUtil.colorLerp(edge2.color2, edge2.color1, midColorScale);\r\n        }\r\n\r\n        for (let y = edge1.y1; y < edge1.y2; y += 1) {\r\n\r\n            scale += step;\r\n\r\n            let x1 = edge1.getX(y);\r\n            let x2 = edge2.getX(y);\r\n\r\n            var color1, color2;\r\n            color1 = MathUtil.colorLerp(edge1.color1, edge1.color2, scale);\r\n\r\n            if (isTop) {\r\n                color2 = MathUtil.colorLerp(edge2.color1, e2Color, scale);\r\n            } else {\r\n                color2 = MathUtil.colorLerp(e2Color, edge2.color2, scale);\r\n            }\r\n            this.drawHLine(x1, x2, y, color1, color2);\r\n        }\r\n    }\r\n}","import MyCanvas from \"./common/MyCanvas\";\r\nimport MyGraph from \"./common/MyGraph\";\r\nimport { Rgba } from \"./common/Rgba\";\r\nimport GMyGraph from \"./gradient/GMyGraph\";\r\n\r\nclass Demo {\r\n\r\n    constructor() {\r\n        let myCanvas = new MyCanvas();\r\n\r\n        let myGraph: MyGraph = new MyGraph(myCanvas.width, myCanvas.height);\r\n\r\n        //画点\r\n\r\n        //  myGraph.drawPoint(10, 10, new Rgba(255, 0, 0, 255), 2);\r\n\r\n        //画线\r\n        // myGraph.drawLine(0, 0, 10, 20, new Rgba(255, 0, 0, 255), 2);\r\n\r\n        //画三角形\r\n        // myGraph.drawTriangle(0, 0, 10, 30, 30, 20, new Rgba(255, 0, 0, 255));\r\n\r\n        // myCanvas.fillBuffer(myGraph.buffer);\r\n\r\n        let gMyGraph: GMyGraph = new GMyGraph(myCanvas.width, myCanvas.height);\r\n\r\n        // 渐变斜三角形\r\n        // gMyGraph.drawTriangle(\r\n        //     0, 0,\r\n        //     10, 30,\r\n        //     30, 20,\r\n        //     new Rgba(255, 0, 0, 255),\r\n        //     new Rgba(0, 255, 0, 255),\r\n        //     new Rgba(0, 0, 255, 255)\r\n        // );\r\n\r\n        // 渐变\r\n        gMyGraph.drawTriangle(\r\n            64, 10,\r\n            14, 70,\r\n            114, 70,\r\n            new Rgba(255, 0, 0, 255),\r\n            new Rgba(0, 255, 0, 255),\r\n            new Rgba(0, 0, 255, 255)\r\n        );\r\n\r\n        myCanvas.fillBuffer(gMyGraph.buffer);\r\n    }\r\n}\r\n\r\nnew Demo();"]}